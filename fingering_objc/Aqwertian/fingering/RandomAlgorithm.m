//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nziebart/GoogleDrive/Aqwertian/Aqwertian/fingering/RandomAlgorithm.java
//
//  Created by nziebart on 9/17/12.
//

#import "Aqwertian/fingering/MusicFile.h"
#import "Aqwertian/fingering/PatternList.h"
#import "Aqwertian/fingering/QwertyMapper.h"
#import "Aqwertian/fingering/RandomAlgorithm.h"
#import "IOSObjectArray.h"
#import "java/lang/NullPointerException.h"
#import "java/util/Collection.h"
#import "java/util/Iterator.h"
#import "java/util/Map.h"
#import "java/util/Random.h"

@implementation AqwertianFingeringRandomAlgorithm

- (JavaUtilRandom *)rand {
  return rand_;
}

- (void)setRand:(JavaUtilRandom *)newRand {
  [rand_ autorelease];
  rand_ = [newRand retain];
}


- (id)initWithAqwertianFingeringQwertyMapper:(AqwertianFingeringQwertyMapper *)m {
  if ((self = [super init])) {
    rand_ = [[JavaUtilRandom alloc] init];
  }
  return self;
}

- (NSString *)getInfo {
  return @"Random key assignment.";
}

- (void)mapWithJavaUtilCollection:(id<JavaUtilCollection>)notes
withAqwertianFingeringPatternList:(AqwertianFingeringPatternList *)patterns
                  withJavaUtilMap:(id<JavaUtilMap>)notesHistogram {
  {
    id<JavaLangIterable> array__ = (id<JavaLangIterable>) notes;
    if (!array__) {
      @throw [[[JavaLangNullPointerException alloc] init] autorelease];
    }
    id<JavaUtilIterator> iter__ = [array__ iterator];
    while ([iter__ hasNext]) {
      AqwertianFingeringMusicFile_Note * n = (AqwertianFingeringMusicFile_Note *) [iter__ next];
      int q;
      do {
        q = [((JavaUtilRandom *) NIL_CHK(rand_)) nextIntWithInt:(int) [((IOSObjectArray *) NIL_CHK([AqwertianFingeringQwertyMapper FINGER])) count]];
      }
      while ([[((IOSObjectArray *) NIL_CHK([AqwertianFingeringQwertyMapper FINGER])) objectAtIndex:q] length] == 0);
      ((AqwertianFingeringMusicFile_Note *) NIL_CHK(n)).qwerty = (unichar) (AqwertianFingeringQwertyMapper_FINGER_START + q);
    }
  }
}

- (void)dealloc {
  ([rand_ autorelease], rand_ = nil);
  [super dealloc];
}

@end


